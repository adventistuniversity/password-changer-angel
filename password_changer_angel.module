<?php
/**
* @file
* Let user change their password in Angel Learning System.
*
* Let user change their password in the Angel Learning System.
* This modules is a sub-module of the Password Changer.
*/

include_once ( dirname(__FILE__) . '/password_changer_angel.inc' );

/**
 * Implement hook_password_changer_api_check_user
 */

function password_changer_angel_password_changer_api_check_user($user_name) {

  //Try to check user
  try  {
   //Get variable from the settings   
   $settings = variable_get('password_changer_angel_settings', array());
   
   //If settings is empty throw error
   if (empty($settings)) {
     throw new passwordChangerAngelExeption('There are no settings set for the Angel Module');
   }
   
   //Set variable to URL
   $api_url = (isset($settings['api_url']))? $settings['api_url'] : '';
   $api_credentials['api_username'] = (isset($settings['api_username']))?$settings['api_username']:'';
   $api_credentials['api_password'] = (isset($settings['api_password']))?$settings['api_password']:'';
   
   //create a new object
   $user_management = new angelAPIUserManagement($api_credentials, $api_url);
   
   //Here check if user student or employee
   //if employee got to SONIS and get the SONIS user name
   $sonis_id = FALSE;
   
   //Check lenght 
   if(strlen($user_name) == 6 ) {
     
     $sonis_id = password_changer_angel_get_sonis_id($user_name);
   }
   
   //Check if a SONIS id was retrieve
   $user_id = ($sonis_id === FALSE) ? $user_name : $sonis_id;
      
   //Execute actions
   $resutls = $user_management->executeAction('CHECK_ACCOUNT', array('USER' => $user_id )) ;
   
   if(strlen($resutls) !== 0) {
      //Get the XML generated by Angel
     $xml_response = new SimpleXMLElement($resutls);
      
      //Get message in XML response coming from Angel
     $response_message = $xml_response->children()->getName(); 
   
     $response_value = $xml_response->children();
   
      //If response has been TRUE
     if ( $response_message == 'success') {
       //Check if the user exist
       if ($response_value[0] == 'TRUE') {
           return TRUE;
        }
      }
      else {
        //Throw error for invalid user or error response from Angel 
        throw new passwordChangerAngelExeption($response_value[0]);
      }
   }
   elseif(strlen($resutls) == 0 ) {
     throw new passwordChangerAngelExeption('Empty response from from Angel Servers'); 
   }
   
  }
  catch ( passwordChangerAngelExeption $e ) {
    
    watchdog('password_changer_api', $e->getMessage(), WATCHDOG_ERROR);
     
    return FALSE;
   
  }
  
}

/*
 *Implement hook password_changer_api_change_password
 *From the password changer API
 */

function password_changer_angel_password_changer_api_change_password($credentials) { 
 
  try {
    
   //Get variable from the settings   
   $settings = variable_get('password_changer_angel_settings', array());
   
   //If settings is empty throw error
   if (empty($settings)) {
     throw new passwordChangerAngelExeption('There are no settings set for the Angel Module');
   }
   
   //Set variable to URL
   $api_url = (isset($settings['api_url']))? $settings['api_url'] : '';
   $api_credentials['api_username'] = (isset($settings['api_username']))?$settings['api_username']:'';
   $api_credentials['api_password'] = (isset($settings['api_password']))?$settings['api_password']:'';
   
   //create a new object
   $user_management = new angelAPIUserManagement($api_credentials, $api_url);
   
   //Here check if user student or employee
   //if employee got to SONIS and get the SONIS user name
   $sonis_id = FALSE;
   
   //Check lenght 
   if(strlen($credentials['user_name']) == 6 ) {
     
     $sonis_id = password_changer_angel_get_sonis_id($credentials['user_name']);
   }
   
   //Check if a SONIS id was retrieve
   $user_id = ($sonis_id === FALSE) ? $credentials['user_name'] : $sonis_id;
   
   //Execute actions
   $resutls = $user_management->executeAction('UPDATE_ACCOUNT', array('USER' => $user_id,
                                                                      'PASSWORD' => $credentials['password']));
   
   //Get the XML generated by Angel
   $xml_response = new SimpleXMLElement($resutls);
   
   //Get message in XML response coming from Angel
   $response_message = $xml_response->children()->getName(); 

   $response_value = $xml_response->children();

   //If response has been TRUE
   if ( $response_message == 'success') {
     //Check if the user exist
     if ($response_value[0] == 'UPDATED')  {
        return password_changer_api_status(array('status' => 'status' ,
                                                 'message' => 'Password has been changed in your Angel account.' ));
      }
    }
    //Throw error for invalid user or error response from Angel 
    throw new passwordChangerAngelExeption($response_value[0]);
 
  }
  catch (passwordChangerAngelExeption $e) {
    
    watchdog('password_changer_angel', $e->getMessage(), WATCHDOG_ERROR);
    
    return password_changer_api_status(array('status' => 'error',
                                             'message' => $e->getMessage()));
  
  }
  
}

/**
 * Implement hook_help()
 */
/*
function password_changer_angel_help($path, $arg) {
  switch ($path) {
    case 'admin/help#password_changer_angel':
      $output = '<p>' . t('Just testing help hook') . '</p>';
      return $output;
  }
}
*/
/**
 *  Implement hook_menu()
 */

function password_changer_angel_menu() {
 
  
  $items['admin/config/password_changer/password_changer_angel'] = array(
    'title' => 'Password Changer Angel Settings',
    'page callback' => 'drupal_get_form',
    'access callback' => TRUE,
    'page arguments' => array('password_changer_angel_settings_page'),
    'access arguments' => array('administer password changer'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  //Return items
  return $items;
 
}



/**
 *  Display form to set angel password changer settings.
 *  
 *  Display form to set angel api user name, password and URL.
 *
 *  @return form to be display.
 *
 */
function password_changer_angel_settings_page($form, &$form_state) {
     
  //get persistent variable from the variable table in the Drupal DB
  $settings = variable_get('password_changer_angel_settings', array());

 
  //give the form a name
  $form['#attributes'] = array('name' => 'password_changer_angel_settings');
 
   
  //display label and the text box to enter user name
  $form['api_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Angel API User Name:'),
    '#size' => 60,
    '#required' => TRUE,
    '#default_value' => (!empty($settings)) ? $settings['api_username'] : '',
    '#description' => t('This would an Angel API user name with permissions make API calls.'),
  );
  
  
  
  //display label and the text box to enter user name
  $form['api_password'] = array(
    '#type' => 'textfield',
    '#title' => t('Angel API Password:'),
    '#size' => 60,
    '#required' => TRUE,
    '#default_value' => (!empty($settings)) ? $settings['api_password'] : '',
    '#description' => t('This would an Angel API user password.'),
  );
  
  
  //display label and the text box to enter user name
  $form['api_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Angel API URL:'),
    '#size' => 60,
    '#required' => TRUE,
    '#default_value' => (!empty($settings)) ? $settings['api_url'] : '',
    '#description' => t('URL were the API calls are made.'),
  );
  
  //display submit button
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save Settings'),
   );
  
  //Return 
  return $form;
 
}

/**
 * Implement hook_submit for the admin form. 
 */
function password_changer_angel_settings_page_submit($form, &$form_state) {
 //Get value
 $settings['api_username'] = $form_state['values']['api_username'];
 $settings['api_password'] = $form_state['values']['api_password'];
 $settings['api_url'] = $form_state['values']['api_url'];
 
 //Save variables in settings
 variable_set('password_changer_angel_settings', $settings);
 
 //Send message to user
 drupal_set_message(t('Your Angel API settings have been saved.'));

}
